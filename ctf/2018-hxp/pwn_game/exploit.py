import pwn
import sys
from binascii import hexlify
import re
import random
#r = pwn.remote("195.201.127.119", 8664)
#r = pwn.remote("127.0.0.1", 18113)

#out of bounds aaaasddddsssddddwwwwwwwwwwwwwwwwww

def test_seq(seq):
    r = pwn.process("pwn game/challenge")
    r.sendline("h")
    r.recvuntil("TOGGLE HEADLESS...\n")

    seq_real = ""
    for x in seq:
        r.sendline(x)
        seq_real += x
        if r.can_recv():
            data = r.recvuntil("!")
            break

    if not r.can_recv():
        r.sendline("q")
        data = r.recvuntil("!")
    score = int(re.findall("[0-9]+", data)[1])
    print score
    r.close()

    return score, seq_real

pwn.context.log_level = 'error'

chars = "wasd+-"
def get_random_seq(n):
    ret = ""
    for _ in xrange(n):
        ret += random.choice(chars)

    return ret

def merge(a,b):
    ret = ""
    i=0
    for i in xrange(min(len(a), len(b))):
        ret += a[i] if random.random() < 0.5 else b[i]

    ret += a[i:]
    ret += b[i:]
    return ret

pop = []
for i in xrange(64):
    score, seq = test_seq(get_random_seq(128))
    pop += [(score, seq)]

while True:
    _, b = random.choice(pop)
    _, a = random.choice(pop)
    seq = merge(a,b) + get_random_seq(64)


    if random.random() < 0.1:
        x = random.randrange(len(seq)-1)
        seq = seq[:x] + random.choice(chars) + seq[x+1:]

    seq = seq[:-random.randrange(4)]

    try:
        score, seq = test_seq(seq)
        pop += [(score, seq)]
        pop = sorted(pop, reverse=True)[:64]
    except KeyboardInterrupt:
        break
    except:
        print seq
